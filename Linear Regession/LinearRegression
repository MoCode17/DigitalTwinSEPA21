import numpy as np
import matplotlib.pyplot as plot
import pandas as pa
from scipy import stats
from sklearn.linear_model import LinearRegression

pd = pa.read_csv("dtdb.csv", nrows=1000000)

pd = pd.loc[pd['sensorName'] == 'sensor1']
#print(pd['time'])
pd['time'] = pd['time'].str.split(' ').str[0]
pd = pd.drop_duplicates(subset=['time'])
print(pd)

pd['timeIndex'] = np.arange(len(pd.index))
print(pd)

#lag model
# pd['Lag_1'] = pd['readingValue'].shift(1)

# X = pd.loc[:, ['Lag_1']]
# X.dropna(inplace=True)
# y = pd.loc[:, 'readingValue']
# y, X = y.align(X, join='inner')
# model = LinearRegression()
# model.fit(X, y)

# Linear regression
X = pd.loc[:, ['timeIndex']]
y = pd.loc[:, 'readingValue']

model = LinearRegression()
model.fit(X, y)

y_pred = pa.Series(model.predict(X), index=X.index)

# Set Matplotlib defaults
#plot.style.use("seaborn-whitegrid")
plot.rc("figure", autolayout=True, figsize=(11, 4))
plot.rc(
    "axes",
    labelweight="bold",
    labelsize="large",
    titleweight="bold",
    titlesize=14,
    titlepad=10,
)
plot_params = dict(
    color="0.75",
    style=".-",
    markeredgecolor="0.25",
    markerfacecolor="0.25",
    legend=False,
)

## Lag plot
# fig, ax = plot.subplots()
# ax.plot(X['Lag_1'], y, '.', color='0.25')
# ax.plot(X['Lag_1'], y_pred)
# #ax.set_aspect('equal')
# ax.set_ylabel('Temperature')
# ax.set_xlabel('Lag_1')
# ax.set_title('Lag Plot of Temperature Readings')

# Linear Regression plot
ax = y.plot(**plot_params)
ax = y_pred.plot(ax=ax, linewidth=3)
ax.set_title('Time Plot of Temperature')

plot.show()